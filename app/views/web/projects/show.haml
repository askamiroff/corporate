- present @project do |project_presenter|
  %h1= project_presenter
  %dl.dl-horizontal
    = show_attribute project_presenter, :status
    = show_attribute project_presenter, :kind
    = show_attribute project_presenter, :deadline
    = show_attribute project_presenter, :letters_of_thanks
    = show_attribute project_presenter, :complaints
    = show_attribute project_presenter, :critical_complaints
    = show_attribute project_presenter, :finish_date
    = show_attribute project_presenter, :overdue_kind
    = show_attribute project_presenter, :counterparty
    = show_attribute project_presenter, :cost
    %dt= t '.total_balance'
    %dd= project_presenter.total_balance @total_expenses

    %dt= t :operations
    %dd
      - if policy(@project).edit?
        = link_to t(:edit), edit_project_path(@project)
      - if policy(@project).status?
        - @project.status_transitions.each do |transition|
          - if transition.event == :finish
            = link_to transition.human_event, new_project_finish_path(@project)
          - else
            = link_to transition.human_event, status_project_path(@project, event: transition.event), method: :patch

%table.table.table-striped
  %thead
    %tr
      %th= han :task, :id
      %th= han :task, :title
      %th= han :task, :competence
      %th= han :task, :total_elapsed_time
      %th= han :task, :expenses
  %tbody
    - @tasks_with_cost.each do |task_cost|
      %tr
        - task_cost[:task].tap do |task|
          - present task do |task_presenter|
            %td= task_presenter.id
            %td= task_presenter.title
            %td= task_presenter.competence_text
            %td= task_presenter.total_elapsed_time
        %td= task_cost[:cost].to_s(:currency)
    %tr
      %td{ colspan: 3 }
      %td
        %strong.pull-right= t '.total_expenses'
      %td
        %strong= @total_expenses.to_s(:currency)
